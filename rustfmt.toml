# https://rust-lang.github.io/rustfmt/
# https://github.com/rust-lang/rustfmt/blob/master/src/config/options.rs
binop_separator = "Front"               # Where to put a binary operator when a binary expression goes multiline.
blank_lines_lower_bound = 0             # Minimum number of blank lines which must be put between items.
blank_lines_upper_bound = 1             # Maximum number of blank lines which can be put between items.
brace_style = "PreferSameLine"          # Brace style for items
combine_control_expr = true             # Combine control expressions with function calls.
comment_width = 100                     # Maximum length of comments. No effect unless wrap_comments = true.
condense_wildcard_suffixes = true       # Replace strings of _ wildcards by a single .. in tuple patterns
control_brace_style = "AlwaysSameLine"  # Brace style for control flow constructs
empty_item_single_line = true           # Put empty-body functions and impls on a single line
enum_discrim_align_threshold = 0        # The maximum length of enum variant having discriminant, that gets vertically aligned with others.
fn_args_layout = "Compressed"           # Control the layout of arguments in a function
fn_single_line = true                   # Put single-expression functions on a single line
force_multiline_blocks = false          # Force multiline closure and match arm bodies to be wrapped in a block
format_macro_matchers = false           # Format the metavariable matching patterns in macros.
format_macro_bodies = false             # Format the bodies of macros.
format_strings = false                  # Format string literals where necessary
hard_tabs = false                       # Use tab characters for indentation, spaces for alignment
imports_indent = "Visual"               # Indent style of imports
imports_layout = "Mixed"                # Item layout inside a imports block
indent_style = "Visual"                 # Indent on expressions or items.
inline_attribute_width = 100            # Write an item and its attribute on the same line if their combined width is below a threshold
match_arm_blocks = false                # Wrap the body of arms in blocks when it does not fit on the same line with the pattern of arms
match_block_trailing_comma = false      # Put a trailing comma after a block based match arm (non-block arms are not affected)
max_width = 150                         # Maximum width of each line
merge_derives = true                    # Merge multiple derives into a single one.
merge_imports = true                    # Merge multiple imports into a single nested import.
normalize_doc_attributes = false        # Convert #![doc] and #[doc] attributes to //! and /// doc comments.
overflow_delimited_expr = true          # When structs, slices, arrays, and block/array-like macros are used as the last argument in an expression list, allow overflow.
reorder_impl_items = false              # Reorder impl items. type and const are put first, then macros and methods.
reorder_imports = true                  # Reorder import and extern crate statements alphabetically in groups (a group is separated by a newline).
reorder_modules = true                  # Reorder mod declarations alphabetically in group.
space_after_colon = false               # Leave a space after the colon.
space_before_colon = false              # Leave a space before the colon.
spaces_around_ranges = false            # Put spaces around the .., ..=, and ... range operators
struct_field_align_threshold = 0        # The maximum diff of width between struct fields to be aligned with each other.
struct_lit_single_line = true           # Put small struct literals on a single line
tab_spaces = 4                          # Number of spaces per tab
trailing_comma = "Vertical"             # How to handle trailing commas for lists
type_punctuation_density = "Wide"       # Determines if + or = are wrapped in spaces in the punctuation of types
use_small_heuristics = "Max"            # Whether to use different formatting for items and expressions if they satisfy a heuristic notion of 'small'.
use_try_shorthand = true                # Replace uses of the try! macro by the ? shorthand
version = "Two"                         # Don't need to be backwards compatible with One
where_single_line = true                # Forces the where clause to be laid out on a single line.
wrap_comments = true                    # Break comments to fit on the line
ignore = []